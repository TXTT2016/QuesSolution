

//第一种方法使用map存储键值对，然后找出出现次数为1的两个元素即可。

//优化map的存储，在存储的时候进行判断，如果map内已存在就直接删除不插入。最后剩下两个则为所求。

//第二种方法，参考前面的只出现一次的数字，如果两个相同的数异或为0，对数组内全部的数异或，
//最后得到的结果就是那两个数的异或结果，然后根据这个结果的二进制位中其中一个1的位置再次对原数组进行异或
//这时可以将原数组分成两个数组，则这两个只出现一次的数字就分别出现在两个数组中了

